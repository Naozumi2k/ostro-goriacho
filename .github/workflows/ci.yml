name: ci

on:
  push:
    tags:
      - '*'

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.7
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Run generate 🏗️
        run: yarn generate

      - name: Zip Release 🗜️
        uses: TheDoctor0/zip-release@0.6.2
        with:
          type: 'zip'
          filename: 'dist.zip'
          path: 'dist'

      - name: Delete Old Releases ❌
        uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          keep_latest: 0
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release 🗃️
        uses: ncipollo/release-action@v1.11.1
        with:
          artifacts: 'dist.zip'
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'latest'
